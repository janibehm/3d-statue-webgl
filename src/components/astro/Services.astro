---
interface ServicesProps {
  translations?: {
    sections: {
      hero: {
        title: string;
        subtitle: string;
      };
      planning: {
        title: string;
        subtitle: string;
      };
      technical: {
        title: string;
        subtitle: string;
      };
      final: {
        title: string;
        subtitle: string;
      };
    };
    process: {
      initial_meeting: {
        title: string;
        description: string;
        content: string[];
      };
      customer_analysis: {
        title: string;
        description: string;
        content: string[];
      };
      design: {
        title: string;
        description: string;
        content: string[];
      };
      seo: {
        title: string;
        description: string;
        areas: {
          images_and_media: {
            title: string;
            description: string;
          };
          responsiveness: {
            title: string;
            description: string;
          };
          structure: {
            title: string;
            description: string;
          };
          meta_data: {
            title: string;
            description: string;
          };
        };
      };
      development_and_technologies: {
        description: string;
        content: string[];
      };
      accessibility: {
        title: string;
        description: string;
        content: string[];
      };
      testing: {
        title: string;
        description: string;
        additional_info: string[];
      };
      launch: {
        title: string;
        description: string;
        additional_info: string[];
      };
      maintenance: {
        title: string;
        description: string;
        content: string[];
      };
    };
  };
}

const {
  translations = {
    sections: {
      hero: { title: "", subtitle: "" },
      planning: { title: "", subtitle: "" },
      technical: { title: "", subtitle: "" },
      final: { title: "", subtitle: "" },
    },
    process: {
      initial_meeting: { title: "", description: "", content: [] },
      customer_analysis: { title: "", description: "", content: [] },
      design: { title: "", description: "", content: [] },
      seo: {
        title: "",
        description: "",
        areas: {
          images_and_media: { title: "", description: "" },
          responsiveness: { title: "", description: "" },
          structure: { title: "", description: "" },
          meta_data: { title: "", description: "" },
        },
      },
      development_and_technologies: { description: "", content: [] },
      accessibility: { title: "", description: "", content: [] },
      testing: { title: "", description: "", additional_info: [] },
      launch: { title: "", description: "", additional_info: [] },
      maintenance: { title: "", description: "", content: [] },
    },
  },
}: ServicesProps = Astro.props;
const { sections, process } = translations;
---

<div class="relative">
  <!-- Hero Section -->
  <section class="bg-black text-white py-32">
    <div class="max-w-6xl mx-auto px-4 text-center">
      <h1 class="fade-in text-4xl md:text-5xl font-bold mb-4">
        {sections?.hero?.title}
      </h1>
      <p class="fade-in text-xl text-gray-300">
        {sections?.hero?.subtitle}
      </p>
    </div>
  </section>

  <!-- Planning Phase -->
  <section class="bg-black/95 text-white py-24">
    <div class="max-w-6xl mx-auto px-4">
      <div class="text-center mb-16">
        <h2 class="text-3xl font-bold mb-4">{sections?.planning?.title}</h2>
        <p class="text-xl text-gray-300">{sections?.planning?.subtitle}</p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-12">
        <!-- Initial Meeting & Customer Analysis -->
        <div class="space-y-8">
          <div>
            <h3 class="text-xl font-bold mb-4">{process?.initial_meeting?.title}</h3>
            <p class="text-lg mb-4">{process?.initial_meeting?.description}</p>
            <ul class="list-disc pl-5 space-y-2">
              {process?.initial_meeting?.content?.map((item: any) => <li>{item}</li>)}
            </ul>
          </div>
          <div>
            <h3 class="text-xl font-bold mb-4">{process?.customer_analysis?.title}</h3>
            <p class="text-lg">{process?.customer_analysis?.description}</p>
          </div>
        </div>
        <!-- Design & Development -->
        <div class="space-y-8">
          <div>
            <h3 class="text-xl font-bold mb-4">{process?.design?.title}</h3>
            <p class="text-lg mb-4">{process?.design?.description}</p>
            <ul class="list-disc pl-5 space-y-2">
              {process?.design?.content?.map((item: any) => <li>{item}</li>)}
            </ul>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Technical Excellence -->
  <section class="bg-black/95 text-white py-24">
    <div class="max-w-6xl mx-auto px-4">
      <div class="text-center mb-16">
        <h2 class="text-3xl font-bold mb-4">{sections?.technical?.title}</h2>
        <p class="text-xl text-gray-300">{sections?.technical?.subtitle}</p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-12">
        <!-- SEO -->

        <h3 class="text-2xl font-bold mb-8">{process?.seo?.title}</h3>
        <p class="text-lg mb-6">{process?.seo?.description}</p>
        <div class="space-y-4">
          {
            Object.entries(process?.seo?.areas || {}).map(([key, value]: any, index) => (
              <div
                class="fade-sequence p-4 bg-gray-900 rounded-lg"
                style={`--delay: ${index * 200}ms`}
              >
                <h4 class="font-bold mb-2 capitalize">{value.title}</h4>
                <p>{value.description}</p>
              </div>
            ))
          }
        </div>
        <!-- Accessibility -->
        <div>
          <h3 class="text-2xl font-bold mb-8">{process?.accessibility?.title}</h3>
          <p class="text-lg mb-6">{process?.accessibility?.description}</p>
          <ul class="space-y-3">
            {
              process?.accessibility?.content?.map((item: any) => (
                <li class="flex items-center">
                  <span class="mr-2">â€¢</span>
                  {item}
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </div>
  </section>

  <!-- Launch & Beyond -->
  <section class="bg-black/95 text-white py-60">
    <div class="max-w-6xl mx-auto px-4">
      <div class="text-center mb-16">
        <h2 class="text-3xl font-bold mb-4">{sections?.final?.title}</h2>
        <p class="text-xl text-gray-300">{sections?.final?.subtitle}</p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <!-- Testing -->
        <div class="p-6 bg-gray-900 rounded-lg card-fade">
          <h3 class="text-xl font-bold mb-4">{process?.testing?.title}</h3>
          <p class="mb-4">{process?.testing?.description}</p>
          {
            process?.testing?.additional_info?.map((info: any) => (
              <p class="text-gray-300">{info}</p>
            ))
          }
        </div>

        <!-- Launch -->
        <div class="p-6 bg-gray-900 rounded-lg card-fade" style="--delay: 200ms">
          <h3 class="text-xl font-bold mb-4">{process?.launch?.title}</h3>
          <p class="mb-4">{process?.launch?.description}</p>
          <ul class="text-gray-300 space-y-2">
            {process?.launch?.additional_info?.map((info: any) => <li>{info}</li>)}
          </ul>
        </div>

        <!-- Maintenance -->
        <div class="p-6 bg-gray-900 rounded-lg card-fade" style="--delay: 400ms">
          <h3 class="text-xl font-bold mb-4">{process?.maintenance?.title}</h3>
          <p class="mb-4">{process?.maintenance?.description}</p>
          <ul class="text-gray-300">
            {process?.maintenance?.content?.map((item: any) => <li>{item}</li>)}
          </ul>
        </div>
      </div>
    </div>
  </section>
</div>

<script>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("show");
      }
    });
  });

  document.querySelectorAll(".fade-in").forEach((el) => observer.observe(el));

  document.querySelectorAll(".fade-sequence").forEach((el) => observer.observe(el));

  document.querySelectorAll(".card-fade").forEach((el) => observer.observe(el));
</script>

<style>
  .fade-in {
    opacity: 0;
    transform: translateY(20px);
    transition: all 1s ease-out;
  }

  .fade-in.show {
    opacity: 1;
    transform: translateY(0);
  }

  .flip-card {
    perspective: 1000px;
    height: auto;
  }

  .flip-card-inner {
    position: relative;
    width: 100%;
    transition: transform 0.8s;
    transform-style: preserve-3d;
  }

  .flip-card-inner.show {
    transform: rotateY(360deg);
  }

  .flip-card-front {
    position: relative;
    width: 100%;
    backface-visibility: hidden;
  }

  .fade-sequence {
    opacity: 0;
    transform: translateX(-50px);
    transition: all 0.5s ease-out;
    transition-delay: var(--delay);
  }

  .fade-sequence.show {
    opacity: 1;
    transform: translateX(0);
  }

  .card-fade {
    opacity: 0;
    transform: translateX(-50px);
    transition: all 0.5s ease-out;
    transition-delay: var(--delay, 0ms);
  }

  .card-fade.show {
    opacity: 1;
    transform: translateX(0);
  }
</style>
