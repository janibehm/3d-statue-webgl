---
const LanguageOptions = ["fi", "en"];
const { pathname } = Astro.url;
const currentLang = pathname.startsWith("/en") ? "en" : "fi";

// URL mapping for localized routes
const routeMapping = {
  services: "palvelut",
  about: "tietoa",
  contact: "yhteydenotto",
  // Add other route mappings as needed
};

function getLocalizedPath(path: string, targetLang: string) {
  const segments = path.split("/").filter(Boolean);
  const route = segments[0]; // For Finnish routes, the route is the first segment

  if (targetLang === "fi") {
    // For Finnish, remove the language prefix and translate the route
    const currentRoute = segments.length > 1 ? segments[1] : "";
    return currentRoute in routeMapping
      ? `/${routeMapping[currentRoute as keyof typeof routeMapping]}`
      : "/";
  } else {
    // For English, find the English equivalent of the Finnish route
    const englishRoute = Object.entries(routeMapping).find(([_, fi]) => fi === route)?.[0];
    return englishRoute ? `/${targetLang}/${englishRoute}` : `/${targetLang}`;
  }
}

// Set cookie when rendering
if (Astro.cookies.get("lang")?.value !== currentLang) {
  Astro.cookies.set("lang", currentLang, {
    path: "/",
    maxAge: 60 * 60 * 24 * 365, // 1 year
  });
}
---

<div
  id="langButtons"
  class="fixed bottom-4 right-4 flex gap-4 bg-black p-[0.2rem] rounded shadow-md z-[1000] transition-opacity duration-300"
>
  {
    LanguageOptions.map((lang) => (
      <a
        href={getLocalizedPath(pathname, lang)}
        class={`p-2 text-white hover:underline active:underline cursor-pointer
          ${currentLang === lang ? "font-bold underline" : ""}`}
      >
        {lang.toUpperCase()}
      </a>
    ))
  }
</div>

<script>
  let lastScrollY = window.scrollY;
  let ticking = false;
  const langButtons = document.getElementById("langButtons");

  const updateButtonVisibility = () => {
    if (!langButtons) return;

    // Hide when scrolling down, show when scrolling up
    if (window.scrollY > lastScrollY) {
      langButtons.style.opacity = "0";
      langButtons.style.pointerEvents = "none";
    } else {
      langButtons.style.opacity = "1";
      langButtons.style.pointerEvents = "auto";
    }

    lastScrollY = window.scrollY;
    ticking = false;
  };

  window.addEventListener("scroll", () => {
    if (!ticking) {
      window.requestAnimationFrame(updateButtonVisibility);
      ticking = true;
    }
  });
</script>
